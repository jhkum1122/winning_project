package roadshop.web.mypage.action;

import java.io.PrintWriter;

import javax.servlet.http.Cookie;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;


@Controller
public class FavoriteRegistAction{
	@RequestMapping("/product/favoriteItemRegist.my")
	public ModelAndView favoriteRegist(@RequestParam("i_id") String i_id, @RequestParam("m_id") String m_id,
			  HttpServletResponse response, HttpServletRequest request) throws Exception{
	
			ModelAndView mav = new ModelAndView();
			Cookie[] cookies = request.getCookies();
			boolean flag = false;
			String favoriteList=null;
			String[] split=null;
			if(cookies.length>1){
				for(int i=cookies.length-1; i>=0; i--){
					//System.out.println("포문에 들어감 " + i +"번째 " +cookies[i].getName());
					if(cookies[i].getName().startsWith(m_id)){
						favoriteList = cookies[i].getValue();
						//System.out.println("favoriteList11111 : " + favoriteList);
						//System.out.println(i + "번째 값  cookies[i].getValue() : " + cookies[i].getValue());
						split = favoriteList.split("&");
						if(split.length>=5){
							response.setContentType("text/html;charset=utf-8");
							PrintWriter out = response.getWriter();
							out.println("<script>");
							out.println("alert('찜하기는 상품 5개까지만 가능합니다^^')");
							out.println("history.back()");
							out.println("</script>");
							return null;
						}
						for(int j=0;j<split.length;j++){
							if(split[j].equals(i_id)){
								PrintWriter out = response.getWriter();
								out.println("<script>");
								out.println("alert('이미 찜하신 상품입니다ㅠ_ㅠ')");
								out.println("history.back()");
								out.println("</script>");
								return null;
							}
						}
						favoriteList =cookies[i].getValue()+"&" + i_id;
						cookies[i].setValue(favoriteList);
						cookies[i].setPath("/");
						response.addCookie(cookies[i]);
						
						flag=true;
					}
				}
			}
			if(!flag){
				Cookie cookie = new Cookie(m_id, i_id);
				cookie.setPath("/");
				cookie.setMaxAge(60*60*24*3);
				response.addCookie(cookie);
			}	
			mav.setViewName("/main/beforeMain.jsp");
			mav.addObject("cookies", cookies);
			return mav;
		
			
			/*for(int i=0; i<cookies.length; i++){
					System.out.println("포문에 들어감 " + i +"번째 " +cookies[i].getName());
			}
			System.out.println(cookies[0].getValue());
			System.out.println(cookies[4].getValue());
			mav.setViewName("/main/beforeMain.jsp");
			return mav;*/
	}
}

/*if(cookie_i_id != null){
split = cookie_i_id.split("&");
for(int i=0;i<split.length;i++){
	if(split[i].equals(cookie_i_id)){
		System.out.println("이미 찜하신 상품입니다.");
		mav.setViewName("/product/itemAsk.it?i_id="+i_id);
		return mav;
	}
	else if(split.length==5){
		System.out.println("찜하기는 5개까지만 가능합니다.");
		mav.setViewName("/product/itemAsk.it?i_id="+i_id);
		return mav;
	}
	cookie_i_id = cookie_i_id +"&"+ i_id;
	response.addCookie(new Cookie(m_id, cookie_i_id));
}
}
else{
Cookie cookie = new Cookie(m_id, i_id);
cookie.setPath("/");
cookie.setMaxAge(60*60*24*3);
response.addCookie(cookie);
}*/