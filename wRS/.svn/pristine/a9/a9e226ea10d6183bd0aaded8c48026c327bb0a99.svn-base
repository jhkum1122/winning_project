package roadshop.web.mypage.action;

import javax.servlet.http.Cookie;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import roadshop.actionforward.ActionForward;
import roadshop.web.item.vo.ItemInfo;


public class FavoriteRegistAction implements MypageAction {

	@Override
	public ActionForward execute(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String i_id = request.getParameter("i_id");
		boolean flag = false;
		HttpSession session = request.getSession();
		String m_id = (String)session.getAttribute("id");
		
		Cookie[] cookies = request.getCookies();
		String favoriteList=null;
		String[] split=null;
		int k=0;
		
	/*	if(cookies != null){
			for(int i=0; i<cookies.length; i++){
				if(cookies[i].getName().startsWith(m_id)){
					favoriteList = cookies[i].getValue();
					split = favoriteList.split("&");
					k=i;
					}
				}
					
				if(split.length==5){
						System.out.println("찜하기는 5개까지만 가능합니다.");
						
						ActionForward forward = new ActionForward();
						forward.setUrl("/product/itemAsk.it?i_id="+i_id);
						return forward;
				}
				else{
					for(int j=0;j<split.length;j++){
						if(split[j].equals(i_id)){
							System.out.println("이미 찜하신 상품입니다.");
							
							ActionForward forward = new ActionForward();
							forward.setUrl("/product/itemAsk.it?i_id="+i_id);
							
							return forward;
							}
						}
						favoriteList =cookies[k].getValue()+"&" + i_id;
						cookies[k].setValue(favoriteList);
						
						flag = true;
				}
		}*/
		if(cookies != null){
			
			for(int i=0; i<cookies.length; i++){
				if(cookies[i].getName().startsWith(m_id)){
					favoriteList = cookies[i].getValue();
					split = favoriteList.split("&");
					if(split.length==5){
						System.out.println("찜하기는 5개까지만 가능합니다.");
						
						ActionForward forward = new ActionForward();
						forward.setUrl("/product/itemAsk.it?i_id="+i_id);
						
						return forward;
					}
					for(int j=0;j<split.length;j++){
						if(split[j].equals(i_id)){
							System.out.println("이미 찜하신 상품입니다.");
							ActionForward forward = new ActionForward();
							forward.setUrl("/product/itemAsk.it?i_id="+i_id);
							
							return forward;
						}
					}
					favoriteList =cookies[i].getValue()+"&" + i_id;
					cookies[i].setValue(favoriteList);
					Cookie cookie = new Cookie(m_id, favoriteList);
					response.addCookie(cookie);
					flag = true;
				}
			}
		}
		if(!flag){
		Cookie cookie = new Cookie(m_id, i_id);
		cookie.setPath("/");
		cookie.setMaxAge(60*60*24*3);
		response.addCookie(cookie);
		}
		
		ActionForward forward = new ActionForward();
		forward.setUrl("/product/itemAsk.it?i_id="+i_id);
		return forward;
	}
	
}
