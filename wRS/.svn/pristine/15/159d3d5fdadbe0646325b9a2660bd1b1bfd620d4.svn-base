/*package roadshop.web.user.controller;

import java.io.IOException;



import roadshop.web.member.action.MemberLoginAction;
import roadshop.web.user.action.LoginFormAction;
import roadshop.web.user.action.SearchIdAction;
import roadshop.web.user.action.SearchPwdAction;
import roadshop.web.user.action.UserAction;
import roadshop.web.user.action.UserLoginAction;
import roadshop.web.user.action.UserLogoutAction;
import roadshop.actionforward.ActionForward;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



*//**
 * Servlet implementation class UserFrontController
 *//*
@WebServlet("*.us")
public class UserFrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;

    *//**
     * Default constructor. 
     *//*
    public UserFrontController() {
        // TODO Auto-generated constructor stub
    	super();
    }

	*//**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 *//*
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	*//**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 *//*
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub

		
		String requestURI =request.getRequestURI();
		// /project/boardWriterForm.bo
		
		String context = request.getContextPath();
		// /project
		
		String command = requestURI.substring(context.length());
		// /boardWriterForm.bo
		
		
		
		UserAction action = null;
		ActionForward forward = null;
		
		
		if(command.equals("/user/userLogin.us")) {
			action = new UserLoginAction();
			try {
				
				forward = action.execute(request, response);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
		else if(command.equals("/user/userLogout.us")) {
			
			action = new UserLogoutAction();
			try {
				forward = action.execute(request, response);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
		else if(command.equals("/user/searchUserid.us")) {
			
			action = new SearchIdAction();
			try {
				forward = action.execute(request, response);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
		else if(command.equals("/user/searchUserpwd.us")) {
			action = new SearchPwdAction();
			try {
				forward = action.execute(request, response);
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
		else if (command.equals("/user/loginform.us")) {
				
				action = new LoginFormAction();
				try {

					forward = action.execute(request, response);
				} catch (Exception e) {

					e.printStackTrace();
				}
		}
	
	
	

		
		
//		if(command.equals("/dogView.dog")) {
//			action = new DogViewAction();
//			try {
//				forward = action.execute(request, response);
//			} catch(Exception e) {
//				e.printStackTrace();
//			}
//		}
//		
//		if(command.equals("/dogCart.dog")) {
//			action = new DogCartListAction();
//			try {
//				forward = action.execute(request, response);
//			} catch(Exception e) {
//				e.printStackTrace();
//			}
//		}
//		
//		if(command.equals("/dogCartDelete.dog")) {
//			action = new DogCartDeleteAction();
//			try {
//				forward = action.execute(request, response);
//			} catch(Exception e) {
//				e.printStackTrace();
//			}
//		}
//		
//		if(command.equals("/dogInsertForm.dog")) {
//			action = new DogInsertFormAction();
//			try {
//				forward = action.execute(request, response);
//			} catch(Exception e) {
//				e.printStackTrace();
//			}
//		}
//		
//		if(command.equals("/dogInsert.dog")) {
//			action = new DogInsertAction();
//			try {
//				forward = action.execute(request, response);
//			} catch(Exception e) {
//				e.printStackTrace();
//			}
//		}
//		
		
		if(forward != null) {
			if(forward.isRedirect()) {			
				response.sendRedirect(forward.getUrl());
			} else {
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getUrl());
				dispatcher.forward(request, response);
			}
		}
	}
	}


*/